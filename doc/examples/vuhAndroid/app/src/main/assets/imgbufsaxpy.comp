#version 440 core

layout(local_size_x_id = 0) in;             // workgroup size set with specialization constant
layout(push_constant) uniform Parameters {  // push constants
    uint size;                               // array size
    float a;                                 // scaling parameter
} params;

layout(std430, binding = 0) buffer lay0 { float arr_y[]; }; // array parameters
layout(binding=1) uniform sampler2D lay1; // VK_FORMAT_R32G32B32A32_SFLOAT -> sampler2D

void main() {
    const uint id = gl_GlobalInvocationID.x * 4; // current offset texelFetch read four floats
    if(params.size <= id){                   // drop threads outside the buffer
        return;
    }
    ivec2 si = textureSize(lay1, 0);
    ivec2 idx = ivec2(id/si.x, id/si.x + si.y);
    vec4 v = texelFetch(lay1, idx, 0);
    arr_y[id] += params.a * v.x;
    arr_y[id + 1] += params.a * v.x;
    arr_y[id + 2] += params.a * v.x;
    arr_y[id + 3] += params.a * v.x;
}