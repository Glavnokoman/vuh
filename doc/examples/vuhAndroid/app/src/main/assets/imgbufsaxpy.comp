#version 440

layout(local_size_x_id = 0) in;             // workgroup size set with specialization constant
layout(push_constant) uniform Parameters {  // push constants
    uint size;                               // array size
    float a;                                 // scaling parameter
} params;

layout(std430, binding = 0) buffer lay0 { float arr_y[]; }; // array parameters
layout(binding=1) uniform isampler2D lay1; // VK_FORMAT_R8G8B8A8_UNORM -> isampler2D

void main() {
    const uint id = gl_GlobalInvocationID.x;// current offset
    if(params.size <= id) {// drop threads outside the buffer
        return;
    }

    ivec2 si = textureSize(lay1, 0);
    ivec2 idx =  ivec2(0,0);//ivec2(id/si.x, id/si.x + si.y);
    ivec4 vi = ivec4(0,0,0,0);
    //vi = texelFetch(lay1, idx, 0);
    vec4 vf = intBitsToFloat(vi.rgba);
    arr_y[id] += params.a * vf.r;
}